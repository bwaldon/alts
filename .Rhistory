library(tidyverse)
library(bootstrap)
library(formatR)
library(reshape)
library(lme4)
library(lmerTest)
theta <- function(x,xdata,na.rm=T) {mean(xdata[x],na.rm=na.rm)}
ci.low <- function(x,na.rm=T) {
mean(x,na.rm=na.rm) - quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.025,na.rm=na.rm)}
ci.high <- function(x,na.rm=T) {
quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.975,na.rm=na.rm) - mean(x,na.rm=na.rm)}
setwd("~/Documents/GitHub/ad_qp")
d <- read.csv("results/6scale_full/results.csv",header = TRUE, stringsAsFactors = FALSE)
d[d$target == "tasty",]$target <- "palatable"
d <- data.frame(lapply(d, function(x) {
gsub('"', '', x)
}))
d <- data.frame(lapply(d, function(x) {
gsub('\\\\', '', x)
}))
exp2 <- d %>%
filter(Answer.list %in% c("list1_exh", "list2_exh"))
length(unique(exp2$workerid)) #should be 107
unique(exp2$language) # two people in exp2 need to be excluded by virtue of native lang.
lang_excl <- exp2 %>%
filter(language %in% c("Italian","Urdu")) %>%
group_by(language) %>%
summarize(n = n()/32)
exp2 <- exp2 %>%
filter(!(language %in% c("Italian","Urdu")))
exp2$correct <- 0
exp2[exp2$id %in% c("high_right1","high_right2","high_right3"),]$correct <- "high"
exp2[exp2$id %in% c("low_right1","low_right2","low_right3"),]$correct <- "low"
exp2$response <- as.numeric(exp2$response)
d_excl_exp2 <- exp2 %>%
group_by(workerid, id, correct) %>%
summarize(response) %>%
filter((correct == "high" && response < 50) || (correct == "low" && response > 50)) %>%
group_by(workerid) %>%
summarize(n_mistakes = n()) %>%
filter(n_mistakes > 1)
exp2 <- exp2 %>%
filter(!(workerid %in% d_excl_exp2$workerid)) %>%
filter(type %in% c("prime","crit"))
length(unique(exp2$workerid)) # should now be 102
d_excl_exp2 <- exp2 %>%
group_by(workerid, id, correct) %>%
summarize(response) %>%
filter((correct == "high" && response < 50) || (correct == "low" && response > 50)) %>%
group_by(workerid) %>%
summarize(n_mistakes = n()) %>%
filter(n_mistakes > 1)
d <- read.csv("results/6scale_full/results.csv",header = TRUE, stringsAsFactors = FALSE)
d[d$target == "tasty",]$target <- "palatable"
d <- data.frame(lapply(d, function(x) {
gsub('"', '', x)
}))
d <- data.frame(lapply(d, function(x) {
gsub('\\\\', '', x)
}))
exp2 <- d %>%
filter(Answer.list %in% c("list1_exh", "list2_exh"))
length(unique(exp2$workerid)) #should be 107
unique(exp2$language) # two people in exp2 need to be excluded by virtue of native lang.
lang_excl <- exp2 %>%
filter(language %in% c("Italian","Urdu")) %>%
group_by(language) %>%
summarize(n = n()/32)
exp2 <- exp2 %>%
filter(!(language %in% c("Italian","Urdu")))
exp2$correct <- 0
exp2[exp2$id %in% c("high_right1","high_right2","high_right3"),]$correct <- "high"
exp2[exp2$id %in% c("low_right1","low_right2","low_right3"),]$correct <- "low"
exp2$response <- as.numeric(exp2$response)
d_excl_exp2 <- exp2 %>%
group_by(workerid, id, correct) %>%
summarize(response) %>%
filter((correct == "high" && response < 50) || (correct == "low" && response > 50)) %>%
group_by(workerid) %>%
summarize(n_mistakes = n()) %>%
filter(n_mistakes > 1)
exp2 <- exp2 %>%
filter(!(workerid %in% d_excl_exp2$workerid)) %>%
filter(type %in% c("prime","crit"))
length(unique(exp2$workerid)) # should now be
fillTheBlanks <- function(x, missing="na"){
rle <- rle(as.character(x))
empty <- which(rle$value==missing)
rle$values[empty] <- rle$value[empty-1]
inverse.rle(rle)
}
exp2$primetype <- fillTheBlanks(exp2$primetype)
scale_means <- exp2 %>%
filter(type == "crit") %>%
group_by(target) %>%
summarize(mean = mean(response)) %>%
arrange(mean)
exp2$target <- factor(exp2$target, levels = scale_means$target)
dodge = position_dodge(.9)
toplot <- function (data) {
output <- data %>%
filter(type == "crit") %>%
group_by(target, primetype) %>%
summarize(Mean = mean(response),CILow=ci.low(response),CIHigh =ci.high(response),n=n()) %>%
ungroup() %>%
mutate(Ymin=Mean-CILow,Ymax=Mean+CIHigh)
return(output)
}
plot_means <- function (toplot) {
ggplot(toplot, aes(x=primetype,y=Mean)) +
facet_wrap(~target, nrow = 1) +
geom_bar(stat="identity",position = "dodge") +
theme(axis.text.x=element_text(angle=20,hjust=1,vjust=1)) +
geom_errorbar(aes(ymin=Ymin,ymax=Ymax),width=.25, position = dodge) +
labs(x = "Condition", y = "Mean interpretation rating") +
# ggtitle("Strength of exhaustivity interpretations by priming condition\n(Experiment 2)") +
scale_x_discrete(labels=c("No-prime", "Prime"))
}
plot_means(toplot(exp2))
m_exp2 <- lmer(response ~ primetype * target + (primetype|workerid), data = exp2 %>% filter(type == "crit"))
summary(m_exp2)
exp2$primetype <- relevel(factor(exp2$primetype), ref = "no")
exp2$target <- relevel(exp2$primetype, ref = "some")
exp2$target <- relevel(exp2$target, ref = "some")
myCenter= function(x) {
if (is.numeric(x)) { return(x - mean(x, na.rm=T)) }
if (is.factor(x)) {
x= as.numeric(x)
return(x - mean(x, na.rm=T))
}
if (is.data.frame(x) || is.matrix(x)) {
m= matrix(nrow=nrow(x), ncol=ncol(x))
colnames(m)= paste("c", colnames(x), sep="")
for (i in 1:ncol(x)) {
m[,i]= myCenter(x[,i])
}
return(as.data.frame(m))
}
}
exp2$primetype_centered <- myCenter(factor(exp2$primetype))
m_exp2_c <- lmer(response ~ primetype_centered * target + (primetype_centered|workerid), data = exp2 %>% filter(type == "crit"))
summary(m_exp2_c)
View(d_excl_exp2)
theta <- function(x,xdata,na.rm=T) {mean(xdata[x],na.rm=na.rm)}
ci.low <- function(x,na.rm=T) {
mean(x,na.rm=na.rm) - quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.025,na.rm=na.rm)}
ci.high <- function(x,na.rm=T) {
quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.975,na.rm=na.rm) - mean(x,na.rm=na.rm)}
setwd("~/Documents/GitHub/alts")
d <- read.csv("results/Experiments1-2/results.csv",header = TRUE, stringsAsFactors = FALSE)
d[d$target == "tasty",]$target <- "palatable"
d <- data.frame(lapply(d, function(x) {
gsub('"', '', x)
}))
d <- data.frame(lapply(d, function(x) {
gsub('\\\\', '', x)
}))
exp1 <- d %>%
filter(Answer.list %in% c("list1_str", "list2_str"))
length(unique(exp1$workerid)) #should be 93
unique(exp1$language) # no one in exp1 needs to be excluded by virtue of native lang.
exp1$correct <- 0
exp1[exp1$id %in% c("high_right1","high_right2","high_right3"),]$correct <- "high"
exp1[exp1$id %in% c("low_right1","low_right2","low_right3"),]$correct <- "low"
exp1$response <- as.numeric(exp1$response)
d_excl_exp1 <- exp1 %>%
group_by(workerid, id, correct) %>%
summarize(response) %>%
filter((correct == "high" && response < 50) || (correct == "low" && response > 50)) %>%
group_by(workerid) %>%
summarize(n_mistakes = n()) %>%
filter(n_mistakes > 1)
View(d_excl_exp1)
View(d_excl_exp2)
df$primetype_centered <- myCenter(factor(df$primetype))
df$primetype_centered <- myCenter(df$primetype)
df$primetype
df <- rbind(exp1, exp2)
View(exp1)
theta <- function(x,xdata,na.rm=T) {mean(xdata[x],na.rm=na.rm)}
ci.low <- function(x,na.rm=T) {
mean(x,na.rm=na.rm) - quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.025,na.rm=na.rm)}
ci.high <- function(x,na.rm=T) {
quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.975,na.rm=na.rm) - mean(x,na.rm=na.rm)}
setwd("~/Documents/GitHub/alts")
d <- read.csv("results/Experiments1-2/results.csv",header = TRUE, stringsAsFactors = FALSE)
d[d$target == "tasty",]$target <- "palatable"
d <- data.frame(lapply(d, function(x) {
gsub('"', '', x)
}))
d <- data.frame(lapply(d, function(x) {
gsub('\\\\', '', x)
}))
exp1 <- d %>%
filter(Answer.list %in% c("list1_str", "list2_str"))
length(unique(exp1$workerid)) #should be 93
unique(exp1$language) # no one in exp1 needs to be excluded by virtue of native lang.
exp1$correct <- 0
exp1[exp1$id %in% c("high_right1","high_right2","high_right3"),]$correct <- "high"
exp1[exp1$id %in% c("low_right1","low_right2","low_right3"),]$correct <- "low"
exp1$response <- as.numeric(exp1$response)
d_excl_exp1 <- exp1 %>%
group_by(workerid, id, correct) %>%
summarize(response) %>%
filter((correct == "high" && response < 50) || (correct == "low" && response > 50)) %>%
group_by(workerid) %>%
summarize(n_mistakes = n()) %>%
filter(n_mistakes > 1)
exp1 <- exp1 %>%
filter(!(workerid %in% d_excl_exp1$workerid)) %>%
filter(type %in% c("prime","crit"))
length(unique(exp1$workerid)) # should now be 79
fillTheBlanks <- function(x, missing="na"){
rle <- rle(as.character(x))
empty <- which(rle$value==missing)
rle$values[empty] <- rle$value[empty-1]
inverse.rle(rle)
}
exp1$primetype <- fillTheBlanks(exp1$primetype)
scale_means <- exp1 %>%
filter(type == "crit") %>%
group_by(target) %>%
summarize(mean = mean(response)) %>%
arrange(mean)
exp1$target <- relevel(exp1$target, ref = "some")
myCenter= function(x) {
if (is.numeric(x)) { return(x - mean(x, na.rm=T)) }
if (is.factor(x)) {
x= as.numeric(x)
return(x - mean(x, na.rm=T))
}
if (is.data.frame(x) || is.matrix(x)) {
m= matrix(nrow=nrow(x), ncol=ncol(x))
colnames(m)= paste("c", colnames(x), sep="")
for (i in 1:ncol(x)) {
m[,i]= myCenter(x[,i])
}
return(as.data.frame(m))
}
}
exp1$primetype_centered <- myCenter(factor(exp1$primetype))
df <- rbind(exp1, exp2)
df <- df %>%
filter(!(primetype == "no"))
df$primetype <- relevel(factor(df$primetype),ref = "str")
plot_means_compare <- function (toplot) {
ggplot(toplot, aes(x=primetype,y=Mean)) +
facet_wrap(~target) +
geom_bar(stat="identity",position = "dodge") +
theme(axis.text.x=element_text(angle=20,hjust=1,vjust=1)) +
geom_errorbar(aes(ymin=Ymin,ymax=Ymax),width=.25, position = dodge) +
labs(x = "Experiment", y = "Mean interpretation rating") +
# ggtitle("Comparison of behavior on critical trials (Experiments 1 and 2)") +
scale_x_discrete(labels=c("Experiment 1", "Experiment 2"))
}
plot_means_compare(toplot(df))
df$primetype <- relevel(factor(df$primetype), ref = "str")
df$primetype_centered <- myCenter(df$primetype)
m_exp1and2 <- lmer(response ~ primetype_centered * target + (primetype_centered|workerid), data = df %>% filter(type == "crit"))
summary(m_exp1and2)
length(unique(df$workerid))
+ 11
173 + 11 + 14
m_exp1and2 <- lmer(response ~ primetype_centered * target + (1|workerid), data = df %>% filter(type == "crit"))
summary(m_exp1and2)
