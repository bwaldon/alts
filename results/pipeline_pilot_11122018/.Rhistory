install.packages("tidyverse")
names(knitr::knit_engines$get())
install.pandoc()
install.packages("installr")
install.packages("brms")
library(tidyverse)
library(ordinal)
library(lmer)
library(lme4)
library(bootstrap)
library(anonymize)
install.packages("anonymizer")
library(anonymizer)
d <- read.csv("results.csv")
d <- read.csv("results.csv", header = TRUE)
read.csv("results.csv", header = TRUE)
setwd("~/Documents/GitHub/symm_qp/results/pipeline_pilot_11122018")
read.csv("results.csv")
d <- read.csv("results.csv")
View(d)
d$workerid <- anonymize(d$workerid)
d <- read.csv("results.csv")
d_excl <- d %>%
group_by(workerid, kind, response) %>%
summarize(response) %>%
filter((kind == "left" && response == "right") || (correct == "right" && response  == "left")) %>%
group_by(workerid) %>%
summarize(n_mistakes = n()) %>%
filter(n_mistakes > 1)
d_excl <- d %>%
group_by(workerid, kind, selection) %>%
summarize(selection) %>%
filter((kind == "left" && selection == "right") || (correct == "right" && selection  == "left")) %>%
group_by(workerid) %>%
summarize(n_mistakes = n()) %>%
filter(n_mistakes > 1)
to_exclude <- d %>%
group_by(workerid, kind, selection) %>%
filter((kind == "left" && selection == "right") || (correct == "right" && selection  == "left")) %>%
group_by(workerid) %>%
summarize(n_mistakes = n()) %>%
filter(n_mistakes > 1)
to_exclude <- d %>%
group_by(workerid, kind, selection) %>%
filter((kind == "left" && selection == "right") || (kind == "right" && selection  == "left")) %>%
group_by(workerid) %>%
summarize(n_mistakes = n()) %>%
filter(n_mistakes > 1)
View(to_exclude)
to_exclude <- d %>%
group_by(workerid, type, selection) %>%
filter((type == "left" && selection == "right") || (type == "right" && selection  == "left")) %>%
group_by(workerid) %>%
summarize(n_mistakes = n()) %>%
filter(n_mistakes > 1)
View(to_exclude)
d <- d %>%
filter(!(workerid %in% toexclude$workerid))
d <- d %>%
filter(!(workerid %in% to_exclude$workerid))
d <- read.csv("results.csv")
to_exclude <- d %>%
group_by(workerid, type, selection) %>%
filter((type == "left" && selection == "right") || (type == "right" && selection  == "left")) %>%
group_by(workerid) %>%
summarize(n_mistakes = n()) %>%
filter(n_mistakes > 1)
d <- d %>%
filter(!(workerid %in% to_exclude$workerid))
?n
e <- d %>%
group_by(workerid) %>%
summarize(ntarget = sum(selection == "target"))
View(e)
e <- d %>%
group_by(workerid) %>%
summarize(ntarget = sum(selection == "target"), ncompetitor = sum(selection == "competitor"), pcompetitor = ncompetitor / (ncompetitor + ntarget))
View(e)
e <- d %>%
group_by(workerid) %>%
summarize(ntarget = sum(selection == "target"),
ncompetitor = sum(selection == "competitor"),
pcompetitor = ncompetitor / (ncompetitor + ntarget))
e <- d %>%
group_by(workerid) %>%
summarize(ntarget = sum(selection == "target"),
ncompetitor = sum(selection == "competitor"),
pcompetitor = ncompetitor / (ncompetitor + ntarget)) %>%
ungroup()
e <- d %>%
group_by(condition) %>%
summarize(ntarget = sum(selection == "target"),
ncompetitor = sum(selection == "competitor"),
pcompetitor = ncompetitor / (ncompetitor + ntarget))
View(e)
e <- d %>%
group_by(workerid) %>%
summarize(ntarget = sum(selection == "target"),
ncompetitor = sum(selection == "competitor"),
pcompetitor = ncompetitor / (ncompetitor + ntarget))
View(e)
rm(e)
sel_counts <- d %>%
group_by(workerid) %>%
summarize(ntarget = sum(selection == "target"),
ncompetitor = sum(selection == "competitor"),
pcompetitor = ncompetitor / (ncompetitor + ntarget))
sel_counts <- d %>%
group_by(workerid,condition) %>%
summarize(ntarget = sum(selection == "target"),
ncompetitor = sum(selection == "competitor"),
pcompetitor = ncompetitor / (ncompetitor + ntarget))
View(sel_counts)
sel_counts <- d %>%
group_by(workerid,condition) %>%
summarize(ntarget = sum(selection == "target"),
ncompetitor = sum(selection == "competitor"),
pcompetitor = ncompetitor / (ncompetitor + ntarget))
dodge = position_dodge(.9)
toplot <- function (data) {
output <- data %>%
group_by(condition,pcompetitor) %>%
summarize(Mean = mean(pcompetitor),CILow=ci.low(pcompetitor),CIHigh =ci.high(pcompetitor),n=n()) %>%
ungroup() %>%
mutate(Ymin=Mean-CILow,Ymax=Mean+CIHigh)
return(output)
}
plot_means <- function (toplot) {
ggplot(toplot, aes(x=condition,y=Mean)) +
geom_bar(stat="identity",position = "dodge") +
theme(axis.text.x=element_text(angle=20,hjust=1,vjust=1)) +
geom_errorbar(aes(ymin=Ymin,ymax=Ymax),width=.25, position = dodge) +
labs(x = "Condition", y = "Proportion") +
ggtitle("Proportion of a competitor chosen")
}
plot_means(toplot(sel_counts))
theta <- function(x,xdata,na.rm=T) {mean(xdata[x],na.rm=na.rm)}
ci.low <- function(x,na.rm=T) {
mean(x,na.rm=na.rm) - quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.025,na.rm=na.rm)}
ci.high <- function(x,na.rm=T) {
quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.975,na.rm=na.rm) - mean(x,na.rm=na.rm)}
dodge = position_dodge(.9)
toplot <- function (data) {
output <- data %>%
group_by(condition,pcompetitor) %>%
summarize(Mean = mean(pcompetitor),CILow=ci.low(pcompetitor),CIHigh =ci.high(pcompetitor),n=n()) %>%
ungroup() %>%
mutate(Ymin=Mean-CILow,Ymax=Mean+CIHigh)
return(output)
}
plot_means <- function (toplot) {
ggplot(toplot, aes(x=condition,y=Mean)) +
geom_bar(stat="identity",position = "dodge") +
theme(axis.text.x=element_text(angle=20,hjust=1,vjust=1)) +
geom_errorbar(aes(ymin=Ymin,ymax=Ymax),width=.25, position = dodge) +
labs(x = "Condition", y = "Proportion") +
ggtitle("Proportion of a competitor chosen")
}
plot_means(toplot(sel_counts))
toplot <- function (data) {
output <- data %>%
group_by(condition,pcompetitor) %>%
summarize(Mean = mean(pcompetitor),CILow=ci.low(pcompetitor),CIHigh =ci.high(pcompetitor)) %>%
ungroup() %>%
mutate(Ymin=Mean-CILow,Ymax=Mean+CIHigh)
return(output)
}
plot_means <- function (toplot) {
ggplot(toplot, aes(x=condition,y=Mean)) +
geom_bar(stat="identity",position = "dodge") +
theme(axis.text.x=element_text(angle=20,hjust=1,vjust=1)) +
geom_errorbar(aes(ymin=Ymin,ymax=Ymax),width=.25, position = dodge) +
labs(x = "Condition", y = "Proportion") +
ggtitle("Proportion of a competitor chosen")
}
plot_means(toplot(sel_counts))
?relevel
d$condition <- relevel(d$condition, ref = "control")
m <- clmm(selection ~ condition, link = "logit")
m <- clmm(selection ~ condition, link = "logit", data = d)
m <- clmm(selection ~ condition + 1|workerid, link = "logit", data = d)
m <- clmm(selection ~ condition + (1|workerid), link = "logit", data = d)
summary(m)
View(d)
m <- clmm(selection ~ condition + (1|workerid) + (1 + condition|id), link = "logit", data = d)
m <- clmm(selection ~ condition + (1|workerid) + (1 + type|id), link = "logit", data = d)
sel_counts <- d %>%
filter(type == "looks like") %>%
group_by(workerid,condition) %>%
summarize(ntarget = sum(selection == "target"),
ncompetitor = sum(selection == "competitor"),
pcompetitor = ncompetitor / (ncompetitor + ntarget))
dodge = position_dodge(.9)
toplot <- function (data) {
output <- data %>%
group_by(condition,pcompetitor) %>%
summarize(Mean = mean(pcompetitor),CILow=ci.low(pcompetitor),CIHigh =ci.high(pcompetitor)) %>%
ungroup() %>%
mutate(Ymin=Mean-CILow,Ymax=Mean+CIHigh)
return(output)
}
plot_means <- function (toplot) {
ggplot(toplot, aes(x=condition,y=Mean)) +
geom_bar(stat="identity",position = "dodge") +
theme(axis.text.x=element_text(angle=20,hjust=1,vjust=1)) +
geom_errorbar(aes(ymin=Ymin,ymax=Ymax),width=.25, position = dodge) +
labs(x = "Condition", y = "Proportion") +
ggtitle("Proportion of a competitor chosen")
}
plot_means(toplot(sel_counts))
m <- clmm(selection ~ condition + (1|workerid) + (1 + condition|id), link = "logit", data = (d %>% filter(type == "looks like")))
summary(m)
d$selection <- relevel(d$selection, ref = "target")
d$condition <- relevel(d$condition, ref = "control")
m <- clmm(selection ~ condition + (1|workerid) + (1 + condition|id), link = "logit", data = (d %>% filter(type == "looks like")))
summary(m)
toplot(sel_counts)
toplot <- function (data) {
output <- data %>%
group_by(condition) %>%
summarize(Mean = mean(pcompetitor),CILow=ci.low(pcompetitor),CIHigh =ci.high(pcompetitor)) %>%
ungroup() %>%
mutate(Ymin=Mean-CILow,Ymax=Mean+CIHigh)
return(output)
}
plot_means <- function (toplot) {
ggplot(toplot, aes(x=condition,y=Mean)) +
geom_bar(stat="identity",position = "dodge") +
theme(axis.text.x=element_text(angle=20,hjust=1,vjust=1)) +
geom_errorbar(aes(ymin=Ymin,ymax=Ymax),width=.25, position = dodge) +
labs(x = "Condition", y = "Proportion") +
ggtitle("Proportion of a competitor chosen")
}
plot_means(toplot(sel_counts))
d$selection <- relevel(d$selection, ref = "target")
d$condition <- relevel(d$condition, ref = "control")
m <- clmm(selection ~ condition + (1|workerid) + (1 + condition|id), link = "logit", data = (d %>% filter(type == "looks like")))
summary(m)
devtools::install_github("mhtess/rwebppl")
install.packages('devtools')
devtools::install_github("mhtess/rwebppl")
library(devtools)
install.packages('libgit2-dev','libgit2-devel', 'libgit')
install.packages("libgit2-dev")
install.packages("libgit")
updateR()
install.packages('installr')
install.packages("libgit2")
install.packages("git2r")
install.packages("devtools",dependencies = TRUE)
install.packages("git2r", dependencies = TRUE)
install.packages("git2r")
install.packages("devtools",dependencies = TRUE)
devtools::install_github("mhtess/rwebppl")
library(tidyverse)
library(ordinal)
library(bootstrap)
theta <- function(x,xdata,na.rm=T) {mean(xdata[x],na.rm=na.rm)}
ci.low <- function(x,na.rm=T) {
mean(x,na.rm=na.rm) - quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.025,na.rm=na.rm)}
ci.high <- function(x,na.rm=T) {
quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.975,na.rm=na.rm) - mean(x,na.rm=na.rm)}
d <- read.csv("results.csv")
to_exclude <- d %>%
group_by(workerid, type, selection) %>%
filter((type == "left" && selection == "right") || (type == "right" && selection  == "left")) %>%
group_by(workerid) %>%
summarize(n_mistakes = n()) %>%
filter(n_mistakes > 1)
View(to_exclude)
d <- d %>%
filter(!(workerid %in% to_exclude$workerid))
sel_counts <- d %>%
filter(type == "looks like") %>%
group_by(workerid,condition) %>%
summarize(ntarget = sum(selection == "target"),
ncompetitor = sum(selection == "competitor"),
pcompetitor = ncompetitor / (ncompetitor + ntarget))
dodge = position_dodge(.9)
toplot <- function (data) {
output <- data %>%
group_by(condition) %>%
summarize(Mean = mean(pcompetitor),CILow=ci.low(pcompetitor),CIHigh =ci.high(pcompetitor)) %>%
ungroup() %>%
mutate(Ymin=Mean-CILow,Ymax=Mean+CIHigh)
return(output)
}
plot_means <- function (toplot) {
ggplot(toplot, aes(x=condition,y=Mean)) +
geom_bar(stat="identity",position = "dodge") +
theme(axis.text.x=element_text(angle=20,hjust=1,vjust=1)) +
geom_errorbar(aes(ymin=Ymin,ymax=Ymax),width=.25, position = dodge) +
labs(x = "Condition", y = "Proportion") +
ggtitle("Proportion of a competitor chosen")
}
plot_means(toplot(sel_counts))
d$selection <- relevel(d$selection, ref = "target")
d$condition <- relevel(d$condition, ref = "control")
m <- clmm(selection ~ condition + (1|workerid) + (1 + condition|id), link = "logit", data = (d %>% filter(type == "looks like")))
summary(m)
View(sel_counts)
View(sel_counts)
d_filtered <- d %>%
# ONLY INTERESTED IN "LOOKS LIKE" TRIALS...
filter(type == "looks like") %>%
filter(id %in% (d %>% filter(condition == "target"))$id)
View(d_filtered)
d_filtered %>% group_by(workerid) %>% summarize(n = n())
d_filtered <- d %>%
# ONLY INTERESTED IN "LOOKS LIKE" TRIALS...
filter(type == "looks like") %>%
# THAT THE CONDITIONS SHARE IN COMMON
filter(id %in% (d %>% filter(condition == "symmetric"))$id)
d_filtered %>% group_by(workerid) %>% summarize(n = n())
d_filtered <- d %>%
# ONLY INTERESTED IN "LOOKS LIKE" TRIALS...
filter(type == "looks like") %>%
# THAT THE CONDITIONS SHARE IN COMMON
filter(id %in% (d %>% filter(type == "looks like" & condition == "symmetric"))$id)
d_filtered %>% group_by(workerid) %>% summarize(n = n())
d_filtered %>% group_by(workerid) %>% summarize(n = n())
m <- clmm(selection ~ condition + (1|workerid) + (1 + condition|id), link = "logit", data = d_filtered)
sel_counts <- d %>%
# ONLY INTERESTED IN "LOOKS LIKE" TRIALS...
filter(type == "looks like") %>%
# ... THAT THE CONDITIONS SHARE IN COMMON
filter(id %in% (d %>% filter(type == "looks like" & condition == "symmetric"))$id)
sel_counts <- d %>%
# ONLY INTERESTED IN "LOOKS LIKE" TRIALS...
filter(type == "looks like") %>%
# ... THAT THE CONDITIONS SHARE IN COMMON
filter(id %in% (d %>% filter(type == "looks like" & condition == "symmetric"))$id) %>%
group_by(workerid,condition) %>%
summarize(ntarget = sum(selection == "target"),
ncompetitor = sum(selection == "competitor"),
pcompetitor = ncompetitor / (ncompetitor + ntarget))
dodge = position_dodge(.9)
toplot <- function (data) {
output <- data %>%
group_by(condition) %>%
summarize(Mean = mean(pcompetitor),CILow=ci.low(pcompetitor),CIHigh =ci.high(pcompetitor)) %>%
ungroup() %>%
mutate(Ymin=Mean-CILow,Ymax=Mean+CIHigh)
return(output)
}
plot_means <- function (toplot) {
ggplot(toplot, aes(x=condition,y=Mean)) +
geom_bar(stat="identity",position = "dodge") +
theme(axis.text.x=element_text(angle=20,hjust=1,vjust=1)) +
geom_errorbar(aes(ymin=Ymin,ymax=Ymax),width=.25, position = dodge) +
labs(x = "Condition", y = "Proportion") +
ggtitle("Proportion of a competitor chosen")
}
plot_means(toplot(sel_counts))
d$selection <- relevel(d$selection, ref = "target")
d$condition <- relevel(d$condition, ref = "control")
d_filtered <- d %>%
# ONLY INTERESTED IN "LOOKS LIKE" TRIALS...
filter(type == "looks like") %>%
# ... THAT THE CONDITIONS SHARE IN COMMON
filter(id %in% (d %>% filter(type == "looks like" & condition == "symmetric"))$id)
m <- clmm(selection ~ condition + (1|workerid) + (1 + condition|id), link = "logit", data = d_filtered)
sel_counts <- d %>%
# ONLY INTERESTED IN "LOOKS LIKE" TRIALS...
filter(type == "looks like") %>%
# ... THAT THE CONDITIONS SHARE IN COMMON
filter(id %in% (d %>% filter(type == "looks like" & condition == "symmetric"))$id) %>%
group_by(workerid,condition) %>%
summarize(n = n(), ntarget = sum(selection == "target"),
ncompetitor = sum(selection == "competitor"),
pcompetitor = ncompetitor / (ncompetitor + ntarget))
View(sel_counts)
dodge = position_dodge(.9)
toplot <- function (data) {
output <- data %>%
group_by(condition) %>%
summarize(Mean = mean(pcompetitor),CILow=ci.low(pcompetitor),CIHigh =ci.high(pcompetitor)) %>%
ungroup() %>%
mutate(Ymin=Mean-CILow,Ymax=Mean+CIHigh)
return(output)
}
plot_means <- function (toplot) {
ggplot(toplot, aes(x=condition,y=Mean)) +
geom_bar(stat="identity",position = "dodge") +
theme(axis.text.x=element_text(angle=20,hjust=1,vjust=1)) +
geom_errorbar(aes(ymin=Ymin,ymax=Ymax),width=.25, position = dodge) +
labs(x = "Condition", y = "Proportion") +
ggtitle("Proportion of a competitor chosen")
}
plot_means(toplot(sel_counts))
d$selection <- relevel(d$selection, ref = "target")
d$condition <- relevel(d$condition, ref = "control")
d_filtered <- d %>%
# ONLY INTERESTED IN "LOOKS LIKE" TRIALS...
filter(type == "looks like") %>%
# ... THAT THE CONDITIONS SHARE IN COMMON
filter(id %in% (d %>% filter(type == "looks like" & condition == "symmetric"))$id)
theta <- function(x,xdata,na.rm=T) {mean(xdata[x],na.rm=na.rm)}
ci.low <- function(x,na.rm=T) {
mean(x,na.rm=na.rm) - quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.025,na.rm=na.rm)}
ci.high <- function(x,na.rm=T) {
quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.975,na.rm=na.rm) - mean(x,na.rm=na.rm)}
d <- read.csv("results.csv")
to_exclude <- d %>%
group_by(workerid, type, selection) %>%
filter((type == "left" && selection == "right") || (type == "right" && selection  == "left")) %>%
group_by(workerid) %>%
summarize(n_mistakes = n()) %>%
filter(n_mistakes > 0)
to_exclude <- d %>%
group_by(workerid, type, selection) %>%
filter((type == "left" && selection == "right") || (type == "right" && selection  == "left")) %>%
group_by(workerid) %>%
summarize(n_mistakes = n()) %>%
filter(n_mistakes > 0)
d <- d %>%
filter(!(workerid %in% to_exclude$workerid))
View(to_exclude)
