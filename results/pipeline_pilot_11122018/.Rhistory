install.packages("tidyverse")
names(knitr::knit_engines$get())
install.pandoc()
install.packages("installr")
install.packages("brms")
library(tidyverse)
library(ordinal)
library(bootstrap)
library(rwebppl)
library(jsonlite)
setwd("~/Documents/GitHub/symm_qp/results/pipeline_pilot_11122018")
theta <- function(x,xdata,na.rm=T) {mean(xdata[x],na.rm=na.rm)}
ci.low <- function(x,na.rm=T) {
mean(x,na.rm=na.rm) - quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.025,na.rm=na.rm)}
ci.high <- function(x,na.rm=T) {
quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.975,na.rm=na.rm) - mean(x,na.rm=na.rm)}
d <- read.csv("results.csv")
to_exclude <- d %>%
group_by(workerid, type, selection) %>%
filter((type == "left" && selection == "right") || (type == "right" && selection  == "left")) %>%
group_by(workerid) %>%
summarize(n_mistakes = n()) %>%
filter(n_mistakes > 0)
d <- d %>%
filter(!(workerid %in% to_exclude$workerid))
sel_counts <- d %>%
# ONLY INTERESTED IN "LOOKS LIKE" TRIALS...
filter(type == "looks like") %>%
# ... THAT THE CONDITIONS SHARE IN COMMON
filter(id %in% (d %>% filter(type == "looks like" & condition == "symmetric"))$id) %>%
group_by(workerid,condition) %>%
summarize(n = n(), ntarget = sum(selection == "target"),
ncompetitor = sum(selection == "competitor"),
pcompetitor = ncompetitor / (ncompetitor + ntarget))
dodge = position_dodge(.9)
toplot <- function (data) {
output <- data %>%
group_by(condition) %>%
summarize(Mean = mean(pcompetitor),CILow=ci.low(pcompetitor),CIHigh =ci.high(pcompetitor)) %>%
ungroup() %>%
mutate(Ymin=Mean-CILow,Ymax=Mean+CIHigh)
return(output)
}
plot_means <- function (toplot) {
ggplot(toplot, aes(x=condition,y=Mean)) +
geom_bar(stat="identity",position = "dodge") +
theme(axis.text.x=element_text(angle=20,hjust=1,vjust=1)) +
geom_errorbar(aes(ymin=Ymin,ymax=Ymax),width=.25, position = dodge) +
labs(x = "Condition", y = "Proportion") +
ggtitle("Proportion of a competitor chosen")
}
plot_means(toplot(sel_counts))
d$selection <- relevel(d$selection, ref = "target")
d$condition <- relevel(d$condition, ref = "control")
d_filtered <- d %>%
# ONLY INTERESTED IN "LOOKS LIKE" TRIALS...
filter(type == "looks like") %>%
# ... THAT THE CONDITIONS SHARE IN COMMON
filter(id %in% (d %>% filter(type == "looks like" & condition == "symmetric"))$id)
m <- clmm(selection ~ condition + (1|workerid) + (1 + condition|id), link = "logit", data = d_filtered %>% filter(condition %in% c("control","target")))
View(d)
summary(m)
library(lme4)
m <- glmer(selection ~ condition + (1|workerid) + (1 + condition|id), family = "binomial", data = d_filtered %>% filter(condition %in% c("control","target")))
summary(m)
d_noprompt <- read.csv("results_noprompt.csv")
colnames(d)
d$language
unique(d$language)
levels(d$language)
noprompt_to_exclude <- d %>%
group_by(workerid, type, selection) %>%
filter((type == "left" && selection == "right") || (type == "right" && selection  == "left")) %>%
group_by(workerid) %>%
summarize(n_mistakes = n()) %>%
filter(n_mistakes > 0)
d_noprompt <- d_noprompt %>%
filter(!(workerid %in% noprompt_to_exclude$workerid))
d_noprompt <- d_noprompt %>%
# change for next run: condition is kind == "critical"
filter(type == "looks like") %>%
group_by(id) %>%
summarize(ntarget = sum(selection == "target"),
ncompetitor = sum(selection == "competitor"),
competitor_prior = ncompetitor / (ncompetitor + ntarget))
d_naming <- read.csv("results_naming.csv")
d_naming <- d_naming %>%
group_by(id) %>%
summarize(nknowtarget = sum(type == "target" & know == "True"),
nknowcompetitor = sum(type == "competitor" & know == "True"),
target_nameability = nknowtarget / sum(type == "target"),
competitor_nameability = nknowcompetitor / sum(type == "competitor"))
View(d_naming)
d_naming <- read.csv("results_naming.csv")
View(d_naming)
d_naming <- d_naming %>%
group_by(id) %>%
summarize(nknowtarget = sum(type == "target" & know == "True"),
nknowcompetitor = sum(type == "competitor" & know == "True"),
target_nameability = nknowtarget / sum(type == "target"),
competitor_nameability = nknowcompetitor / sum(type == "competitor"))
d_naming <- read.csv("results_naming.csv")
d_naming %>% filter(id == "zebra")
View(d_naming %>% filter(id == "zebra"))
d_naming <- d_naming %>%
group_by(id) %>%
summarize(nknowtarget = sum(type == "target" & know == "True"),
nknowcompetitor = sum(type == "competitor" & know == "True"),
target_nameability = nknowtarget / sum(type == "target"),
competitor_nameability = nknowcompetitor / sum(type == "competitor"))
symmetric_byitem <- d %>%
filter(condition == "symmetric" & kind == "critical" & type == "looks like") %>%
group_by(id) %>%
summarize(ntarget = sum(selection == "target"),
ncompetitor = sum(selection == "competitor"),
observed_competitor = ncompetitor / (ncompetitor + ntarget))
symmetric_byitem <- merge(symmetric_byitem, d_naming, by = "id")
symmetric_byitem <- merge(symmetric_byitem, d_noprompt, by = "id")
symmetric_byitem <- symmetric_byitem %>%
select(id,observed_competitor,competitor_prior,target_nameability,competitor_nameability)
bda <- read_file("bda.txt")
symmetric_byitem_json <- toJSON(symmetric_byitem)
